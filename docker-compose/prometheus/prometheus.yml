global:
  # controls how often Prometheus will scrape targets
  scrape_interval: 5s
  # controls how often Prometheus will evaluate rules
  evaluation_interval: 15s

# specifies the location of any rules we want the Prometheus server to load. For now we've got no rules.
rule_files:
# - "first.rules"
# - "second.rules"

#  controls what resources Prometheus monitors
scrape_configs:
  - job_name: spring-boot
    metrics_path: /actuator/prometheus
    static_configs:
      - targets:
          - host.docker.internal:8081
        labels:
          application: InitializerManager
          runtime: jvm
          framework: SpringBoot2
  - job_name: 'grafana_metrics'
    scrape_interval: 15s
    scrape_timeout: 5s
    static_configs:
      - targets: ['grafana:3000']
  - job_name: rabbitmq
    static_configs:
      - targets:
          - rabbitmq:15692
  # Self scrape
  - job_name: prometheus
    static_configs:
      - targets: ['prometheus:9090']
  - job_name: combined
    metrics_path: "/actuator/prometheus"
    static_configs:
      - targets: ['host.docker.internal:8080']
  - job_name: loki
    static_configs:
      - targets:
          - loki:3100
  - job_name: zipkin
    scrape_interval: 5s
    metrics_path: '/prometheus'
    static_configs:
      - targets:
          - zipkin:9411
        labels:
          application: Zipkin
          runtime: jvm
          framework: SpringBoot2